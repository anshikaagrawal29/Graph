using System;
using System.Collections.Generic;
//Detect cycle in undirected graph
public class Graph
{
	public int v;
	public List<int>[] adj;
	
	public Graph(int num)
	{
		v = num;
		adj = new List<int>[num];
		
		for(int i = 0;i < v; i++)
		{
			adj[i] = new List<int>();
		}
	}
	
	public bool isCycle(bool[] visited, int v , int parent)
	{
		visited[v] = true;
		
		foreach(int elem in adj[v])
		{
			if(!visited[elem])
			{
			   if(isCycle(visited, elem, v))
				   return true;
			}
			else if(elem != parent)
			{
			 return true;
			}
		}
		
		return false;
	}
	
	public bool DetectCycle()
	{
		bool[] visited = new bool[v];
		
		for(int i= 0; i< v; i++)
		{
			if(isCycle(visited, i, -1))
				return true;
		}
		
		return false;
	}
	
	
	public static void Main()
	{
		Graph g = new Graph(5);
		
		g.adj[0].Add(1);
		g.adj[0].Add(2);
		g.adj[0].Add(0);
		
		bool flag = g.DetectCycle();
		if(flag)
			Console.Write("Cycle exists");
		else
			Console.Write("Cycle does not exist");
	}
}
