using System;
using System.Collections.Generic;

//Detect Cycle using DFS with 1 visited stack
public class Graph
{
	public int v;
	public List<int>[] adj;
	
	public Graph(int num)
	{
		v = num;
		adj = new List<int>[num];
		
		for(int i= 0; i< v; i++)
			adj[i] = new List<int>();
	}
	
	public bool DetectCycle()
	{
		bool[] visited = new bool[v];
		
		for(int i=0 ; i< v; i++)
		{
			if(isCycleUtil(visited, i))
				return true;
		}
		
		return false;
	}
	
	public bool isCycleUtil(bool[] visited, int v)
	{
		if(visited[v])
			return true;
		
		visited[v] = true;
		foreach(int elem in adj[v])
		{
			if(isCycleUtil(visited, elem))
				return true;
		}
		
		visited[v] = false;
		return false;
		
	}
	public static void Main()
	{
		Graph g = new Graph(5);
		
		g.adj[0].Add(1);
		g.adj[0].Add(3);
		g.adj[1].Add(2);
		g.adj[1].Add(3);
		g.adj[3].Add(3);
		g.adj[3].Add(4);
		g.adj[2].Add(4);
		
		bool isCycle = g.DetectCycle();
		
		if(isCycle)
			Console.Write("Cycle Exist");
		else
			Console.Write("Cycle Does not Exist");
	}
}
